{"version":3,"sources":["providers/auth/isAuthenticated.reducer.js","providers/auth/user.reducer.js","providers/auth/auth.provider.js","themes/theme.js","context/InitialData.js","components/BoardBar.js","components/Task.js","components/Column.js","pages/Board.js","components/auth.js","pages/Signup.js","pages/Login.js","providers/auth/auth.action.js","App.js","serviceWorker.js","index.js"],"names":["isAuthenticatedReducer","state","arguments","length","undefined","action","type","status","init","isFetching","data","errors","userReducer","Object","objectSpread","AuthContext","React","createContext","AuthProvider","props","preAuthenticated","window","localStorage","getItem","preUserInfo","_useReducer","useReducer","_useReducer2","slicedToArray","isAuthenticated","dispatchIsAuthenticated","_useReducer3","_useReducer4","defaultContext","user","dispatchUser","react_default","a","createElement","Provider","assign","value","theme","createMuiTheme","typography","fontFamily","fontSize","h1","button","textTransform","palette","primary","main","initialData","cards","card-1","id","title","deadline","tag","description","card-2","card-3","card-4","card-5","card-6","card-7","card-8","columns","column-1","cardIds","column-2","column-3","column-4","columnOrder","useStyles","makeStyles","appBar","background","boxShadow","menuButton","marginRight","spacing","flexGrow","BoardBar","classes","AppBar","position","className","Toolbar","Typography","variant","IconButton","edge","color","aria-label","Menu_default","card","margin","width","marginBottom","cardTitle","fontWeight","height","borderRadius","Task","_ref","index","react_beautiful_dnd_esm","draggableId","provided","Card","draggableProps","dragHandleProps","ref","innerRef","CardContent","gutterBottom","paper","column","marginLeft","paddingTop","columnTitle","display","alignItems","icon","marginTop","padding","cursor","cardSection","overflow","overflowY","&::-webkit-scrollbar","addCard","bottom","left","&:hover","Column","Grid","key","item","Paper","style","droppableId","droppableProps","map","components_Task","placeholder","Button","grid","container","maxWidth","overflowX","paddingBottom","Board","_useState","useState","_useState2","setData","components_BoardBar","onDragEnd","result","_objectSpread3","destination","source","newColumnOrder","Array","from","splice","start","finish","startCardIds","newStart","finishCardIds","newFinish","defineProperty","newCardIds","newColumn","direction","columnId","cardId","components_Column","AuthForm","_useForm","useForm","handleSubmit","register","authStyle","form","Box","component","root","onSubmit","align","FormHelperText","error","serverResponse","email","message","password","TextField","name","label","input1","input","inputRef","required","pattern","input2","minLength","submit","RedirectDiv","AuthDivStyle","div","react_router_dom","to","link","desc","Signup","history","useHistory","setServerResponse","vh100","md","xs","alt","src","auth_AuthForm","values","console","log","axios","post","then","res","push","catch","response","auth_RedirectDiv","Login","auth","useContext","setItem","JSON","stringify","App","MuiThemeProvider","auth_provider_AuthProvider","react_router","exact","path","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.247a1aa7.chunk.js","sourcesContent":["\nconst isAuthenticatedReducer = (state=false, action) => {\n    switch (action.type) {\n        case 'SET_IS_AUTHENTICATED':\n            return action.status;\n        default:\n            return state;\n    }\n}\n\nexport default isAuthenticatedReducer;","\nconst init = {\n    isFetching: false,\n    data: null,\n    errors: null\n}\n\nconst userReducer = (state=init, action) => {\n    switch (action.type) {\n        case 'FETCH_USER_REQUEST':\n            return {...state, isFetching: true};\n        case 'FETCH_USER_SUCCESS':\n            return { isFetching: false, data: action.data, errors: null}\n        case 'FETCH_USER_FAILURE':\n            return { isFetching: false, data: null, errors: action.errors}\n        default:\n            return state;\n    }\n\n}\n\nexport default userReducer;","import React, {useReducer} from \"react\";\nimport isAuthenticatedReducer from './isAuthenticated.reducer';\nimport userReducer from './user.reducer'\n\nconst AuthContext = React.createContext();\n\nconst AuthProvider = (props) => {\n    //2 states of AuthProviders to store the state of authentication\n    const preAuthenticated = window.localStorage.getItem('isAuthenticated') || false;\n    const preUserInfo = window.localStorage.getItem('userInfor') || null;\n    const [isAuthenticated, dispatchIsAuthenticated] = useReducer(isAuthenticatedReducer, preAuthenticated);\n    const [user, dispatchUser] = useReducer(userReducer, preUserInfo);\n\n\n    const defaultContext = {\n        isAuthenticated,\n        user,\n        dispatchIsAuthenticated,\n        dispatchUser\n    }\n\n    return (\n        <AuthContext.Provider value = {defaultContext} {...props}/>\n    )\n}\n\nconst useAuth = () => React.useContext(AuthContext);\n\nexport {\n    useAuth,\n    AuthProvider\n}","import { createMuiTheme } from \"@material-ui/core\";\n\nexport const theme = createMuiTheme({\n  typography: {\n    fontFamily: '\"Roboto\"',\n    fontSize: 12,\n    h1: {\n      // could customize the h1 variant as well\n    },\n    button: {\n      textTransform: 'none'\n    }\n  },\n  palette: {\n    primary: { main: \"#DF1B1B\" }\n  }\n});\n","const initialData = {\n  cards: {\n    \"card-1\": {\n      id: \"card-1\",\n      title: \"Study Math\",\n      deadline: \"07/04/2020\",\n      tag: \"green\",\n      description: \"lorem ipsum\"\n    },\n    \"card-2\": {\n      id: \"card-2\",\n      title: \"Go to School\",\n      deadline: \"07/04/2020\",\n      tag: \"green\",\n      description: \"lorem ipsum\"\n    },\n    \"card-3\": {\n      id: \"card-3\",\n      title: \"Do your Homework\",\n      deadline: \"07/04/2020\",\n      tag: \"green\",\n      description: \"lorem ipsum\"\n    },\n    \"card-4\": {\n      id: \"card-4\",\n      title: \"Eat your veggies\",\n      deadline: \"07/04/2020\",\n      tag: \"green\",\n      description: \"lorem ipsum\"\n    },\n    \"card-5\": {\n        id: \"card-5\",\n        title: \"Extra Activity\",\n        deadline: \"07/04/2020\",\n        tag: \"green\",\n        description: \"lorem ipsum\"\n      },\n      \"card-6\": {\n        id: \"card-6\",\n        title: \"Find a hobby\",\n        deadline: \"07/04/2020\",\n        tag: \"green\",\n        description: \"lorem ipsum\"\n      },\n      \"card-7\": {\n        id: \"card-7\",\n        title: \"Write Notes\",\n        deadline: \"07/04/2020\",\n        tag: \"green\",\n        description: \"lorem ipsum\"\n      },\n      \"card-8\": {\n        id: \"card-8\",\n        title: \"Refer library\",\n        deadline: \"07/04/2020\",\n        tag: \"green\",\n        description: \"lorem ipsum\"\n      }\n  },\n  columns: {\n    \"column-1\": {\n      id: \"column-1\",\n      title: \"Backlog\",\n      cardIds: [\"card-1\", \"card-2\", \"card-3\", \"card-4\"]\n    },\n    \"column-2\": {\n      id: \"column-2\",\n      title: \"In Progress\",\n      cardIds: [\"card-5\", \"card-6\", \"card-7\", \"card-8\"]\n    },\n    \"column-3\": {\n      id: \"column-3\",\n      title: \"Review\",\n      cardIds: []\n    },\n    \"column-4\": {\n      id: \"column-4\",\n      title: \"Completed\",\n      cardIds: []\n    }\n  },\n  columnOrder: [\"column-1\", \"column-2\", \"column-3\", \"column-4\"]\n};\n\nexport default initialData;\n","import React from 'react'\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nconst useStyles = makeStyles(theme => ({\n    appBar: {\n      background: \"#759CFC\",\n      boxShadow: \"none\"\n    },\n    menuButton: {\n      marginRight: theme.spacing(2)\n    },\n    title: {\n      flexGrow: 1\n    }\n  }));\n\nconst BoardBar = () => {\n    const classes = useStyles();\n    return(\n        <AppBar position=\"static\" className={classes.appBar}>\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            My School Board\n          </Typography>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n          >\n            <MenuIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n    )\n}\n\nexport default BoardBar","import React from \"react\";\nimport { Draggable } from \"react-beautiful-dnd\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    margin: \"auto\",\n    width: \"280px\",\n    marginBottom: \"10px\"\n  },\n  cardTitle: {\n    fontSize: 14,\n    fontWeight: 700\n  },\n  tag: {\n    height: \"7px\",\n    width: \"45px\",\n    background: \"#5ACD76\",\n    borderRadius: \"5px\",\n    marginBottom: \"10px\"\n  }\n}));\n\nconst Task = ({ card, index }) => {\n  const classes = useStyles();\n  return (\n    <Draggable draggableId={card.id} index={index}>\n      {provided => (\n        <Card\n          className={classes.card}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          ref={provided.innerRef}\n        >\n          <CardContent>\n            <div className={classes.tag} />\n            <Typography className={classes.cardTitle} gutterBottom>\n              {card.title}\n            </Typography>\n            <Typography color=\"textSecondary\">{card.deadline}</Typography>\n          </CardContent>\n        </Card>\n      )}\n    </Draggable>\n  );\n};\n\nexport default Task;\n","import React from \"react\";\nimport Task from \"./Task\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    height: 550,\n    width: 320,\n    background: \"#F4F6FF\",\n    boxShadow: \"none\",\n    position: \"relative\",\n    marginRight: \"20px\"\n  },\n  column: {\n    marginLeft: \"25px\",\n    paddingTop: \"20px\"\n  },\n  columnTitle: {\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  icon: {\n    marginLeft: \"150px\",\n    marginTop: \"20px\",\n    padding: \"20px\",\n    cursor: \"pointer\"\n  },\n  cardSection: {\n    height: 410,\n    overflow: \"hidden\",\n    overflowY: \"scroll\",\n    \"&::-webkit-scrollbar\": {\n      display: \"none\"\n    }\n  },\n  addCard: {\n    background: \"#759CFC\",\n    color: \"white\",\n    boxShadow: \"none\",\n    position: \"absolute\",\n    bottom: 20,\n    left: 20,\n    \"&:hover\": {\n      background: \"#759CFC\"\n    }\n  }\n}));\n\nconst Column = ({ column, cards, index }) => {\n  const classes = useStyles();\n  return (\n    <Draggable draggableId={column.id} index={index}>\n      {provided => (\n        <Grid\n          key={column.id}\n          item\n          {...provided.draggableProps}\n          ref={provided.innerRef}\n        >\n          <Paper className={classes.paper}>\n            <div className={classes.columnTitle} {...provided.dragHandleProps}>\n              <Typography variant=\"h6\" className={classes.column}>\n                {column.title}\n              </Typography>\n              <div className={classes.icon}>\n                <i\n                  className=\"fas fa-ellipsis-h\"\n                  style={{ color: \"#D7DDF8\" }}\n                ></i>\n              </div>\n            </div>\n            <Droppable droppableId={column.id} type=\"card\">\n              {provided => (\n                <div\n                  className={classes.cardSection}\n                  {...provided.droppableProps}\n                  ref={provided.innerRef}\n                >\n                  {cards.map((card, index) => (\n                    <Task key={card.id} card={card} index={index} />\n                  ))}\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n\n            <Button variant=\"contained\" className={classes.addCard}>\n              Add Card\n            </Button>\n          </Paper>\n        </Grid>\n      )}\n    </Draggable>\n  );\n};\n\nexport default Column;\n","import React, { useState } from \"react\";\nimport initialData from \"../context/InitialData\";\nimport BoardBar from \"../components/BoardBar\";\nimport Column from \"../components/Column\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n  grid: {\n    marginTop: \"40px\",\n    marginLeft: \"20px\",\n    display: \"flex\"\n  },\n  container: {\n    width: \"100%\",\n    maxWidth: \"1370px\",\n    overflowX: \"scroll\",\n    overflow: \"hidden\",\n    margin: \"0 auto\",\n    paddingBottom: \"17px\",\n    \"&::-webkit-scrollbar\": {\n      display: \"none\"\n    }\n  }\n}));\n\nconst Board = () => {\n  const classes = useStyles();\n  const [data, setData] = useState(initialData);\n\n  const onDragEnd = result => {\n    const { destination, source, draggableId, type } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n\n    if (type === \"column\") {\n      const newColumnOrder = Array.from(data.columnOrder);\n      newColumnOrder.splice(source.index, 1);\n      newColumnOrder.splice(destination.index, 0, draggableId);\n\n      setData({\n        ...data,\n        columnOrder: newColumnOrder\n      });\n      return;\n    }\n\n    const start = data.columns[source.droppableId];\n    const finish = data.columns[destination.droppableId];\n    //Moving withing the same column\n    if (start === finish) {\n      const newCardIds = Array.from(start.cardIds);\n      newCardIds.splice(source.index, 1);\n      newCardIds.splice(destination.index, 0, draggableId);\n      const newColumn = {\n        ...start,\n        cardIds: newCardIds\n      };\n\n      setData({\n        ...data,\n        columns: {\n          ...data.columns,\n          [newColumn.id]: newColumn\n        }\n      });\n      return;\n    }\n    //Moving from one column to another\n    const startCardIds = Array.from(start.cardIds);\n    startCardIds.splice(source.index, 1);\n    const newStart = {\n      ...start,\n      cardIds: startCardIds\n    };\n\n    const finishCardIds = Array.from(finish.cardIds);\n    finishCardIds.splice(destination.index, 0, draggableId);\n    const newFinish = {\n      ...finish,\n      cardIds: finishCardIds\n    };\n\n    setData({\n      ...data,\n      columns: {\n        ...data.columns,\n        [newStart.id]: newStart,\n        [newFinish.id]: newFinish\n      }\n    });\n  };\n\n  return (\n    <div>\n      <BoardBar />\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Droppable\n          droppableId=\"all-columns\"\n          direction=\"horizontal\"\n          type=\"column\"\n        >\n          {provided => (\n            <div\n              className={classes.container}\n              {...provided.droppableProps}\n              ref={provided.innerRef}\n            >\n              <div className={classes.grid}>\n                {data.columnOrder.map((columnId, index) => {\n                  const column = data.columns[columnId];\n                  const cards = column.cardIds.map(\n                    cardId => data.cards[cardId]\n                  );\n\n                  return (\n                    <Column\n                      key={column.id}\n                      column={column}\n                      cards={cards}\n                      index={index}\n                    />\n                  );\n                })}\n              </div>\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n    </div>\n  );\n};\n\nexport default Board;\n","import {useForm} from \"react-hook-form\";\nimport {Box, Button, FormHelperText, makeStyles, TextField, Typography} from \"@material-ui/core\";\nimport {authStyle} from \"../themes/signup.style\";\nimport {Link} from \"react-router-dom\";\nimport React from \"react\";\n\nconst AuthForm = (props) => {\n    const { handleSubmit, register, errors } = useForm();\n\n    const emailValidator = {\n        required: 'Email is required',\n        pattern: {\n            value: /^\\S+@\\S+$/i,\n            message: \"Invalid email address\"\n        }\n    }\n\n    const passwordValidator = {\n        required: 'Password is required',\n        minLength: {\n            value: 6,\n            message: \"Password needs 6 characters at least\"\n        }\n    }\n\n    const classes = makeStyles(authStyle.form)();\n\n    return (\n        <Box component={'form'} className={classes.root} onSubmit={handleSubmit(props.onSubmit)}>\n            <Typography align={'center'} className={classes.title}>{props.title}</Typography>\n\n            <FormHelperText error className={classes.error}>{props.serverResponse}{errors.email && (errors.email.message + '. ')}{errors.password && errors.password.message}</FormHelperText>\n\n            <TextField name=\"email\" variant={'outlined'} type=\"text\" label={props.input1}\n                       className={classes.input}\n                       inputRef={register(emailValidator)}\n                       error={errors.email}\n                       // helperText={errors.email && errors.email.message}\n            />\n\n            <TextField name=\"password\" variant={'outlined'} type=\"password\" label={props.input2}\n                       className={classes.input}\n                       inputRef={register(passwordValidator)}\n                       error={errors.password}\n                       // helperText={errors.password && errors.password.message}\n            />\n\n            <Button color={'primary'} className={classes.button} variant={'contained'} type={'submit'}> {props.submit}</Button>\n        </Box>\n    )\n};\n\nconst RedirectDiv = (props) => {\n    const AuthDivStyle = makeStyles(authStyle.div)();\n\n    return (\n        <Box component={'div'} className={AuthDivStyle.root}>\n            <Typography className={AuthDivStyle.margin}>{props.title}</Typography>\n            <Link to={props.link}><Typography>{props.desc}</Typography></Link>\n        </Box>\n    )\n}\n\nexport {\n    AuthForm,\n    RedirectDiv\n}","import React, {useState} from \"react\";\nimport {Grid} from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport {useHistory} from \"react-router-dom\";\nimport { AuthForm, RedirectDiv} from \"../components/auth\"\nimport {authStyle} from '../themes/signup.style';\nimport axios from 'axios';\n\nconst Signup = () => {\n    const history = useHistory();\n\n    const [serverResponse, setServerResponse] = useState('');\n\n    //Classes of CSS style\n    const classes = makeStyles(authStyle)();\n\n    //Callback for the form submission after validation\n    const onSubmit = values => {\n        const {email, password} = values;\n        console.log(email, password);\n\n        //Make a request to backend\n        const url = '/api/v1/auth/register'\n        axios.post(url, {email, password})\n            .then(res => {\n\n                //If success to create a new account, redirect to login page\n                if (res.status === 200){\n                    history.push('/login')\n                } else {\n                    setServerResponse(res.data.error);\n                }\n\n            })\n            .catch(error => {\n                setServerResponse(error.response.data.error);\n            });\n\n    };\n\n    return (\n        <Grid container className={classes.vh100}>\n            <Grid item md={6} xs={12}>\n                <img alt='' src={\"/images/image1.png\"} width={'100%'} height={'100%'}/>\n            </Grid>\n            <Grid item md={6} xs={12}>\n                <AuthForm title=\"Sign up to Kanban\" input1=\"Enter email\" input2=\"Create Password\" submit=\"Sign up\"\n                          onSubmit={onSubmit}\n                          serverResponse={serverResponse}/>\n                <RedirectDiv title={'Already have an account?'} link={'/login'} desc={'Login'}/>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport {Signup};","import React, {useState} from \"react\";\nimport {useHistory} from 'react-router-dom';\nimport {useAuth} from \"../providers/auth/auth.provider\";\nimport {authStyle} from '../themes/signup.style';\nimport {setIsAuthenticated, fetchUserSuccess, fetchUserRequest, fetchUserFailure} from \"../providers/auth/auth.action\";\n\nimport {AuthForm, RedirectDiv} from '../components/auth'\nimport axios from \"axios\";\nimport {Grid, makeStyles} from \"@material-ui/core\";\n\nconst Login = () => {\n    const auth = useAuth();\n    const {dispatchIsAuthenticated, dispatchUser} = auth;\n    const [serverResponse, setServerResponse] = useState('');\n\n    const history = useHistory();\n\n    //Classes of CSS style\n    const classes = makeStyles(authStyle)();\n\n    //Callback for the form submission after validating successfully\n    const onSubmit = (data) => {\n\n        const {email, password} = data;\n\n        setServerResponse('');\n\n        //Make request to check whether the email and password are valid\n        const url = '/api/v1/auth/login'; //It is mock data, it will change when sever can provide auth api\n\n        dispatchUser(fetchUserRequest());\n\n        axios.post(url, {email, password})\n            .then(res => {\n                //If success to create a new account, redirect to login page\n                if (res.status === 200){\n                    //Save data on local storage\n                    localStorage.setItem('isAuthenticated', true);\n                    localStorage.setItem('user', JSON.stringify(res.data.user));\n\n                    //Update the state of Auth providers\n                    dispatchIsAuthenticated(setIsAuthenticated(true));\n                    dispatchUser(fetchUserSuccess(res.data.user))\n                    console.log('login successfully');\n\n                    //Redirect to dashboard\n                    history.push('/');\n\n                } else {\n                    console.log(res)\n                    setServerResponse(res.data.error);\n                }\n\n            })\n            .catch(error => {\n                dispatchUser(fetchUserFailure(error.response.data.user))\n                setServerResponse(error.response.data.error);\n                console.log(error.response.data.error);\n            });\n\n    }\n\n    return (\n        <Grid container className={classes.vh100}>\n            <Grid item md={6} xs={12} >\n                <img alt='' src={\"/images/image1.png\"} width={'100%'} height={'100%'}/>\n            </Grid>\n            <Grid item md={6} xs={12}>\n                <AuthForm title=\"Welcome back!\" input1=\"Enter email\" input2=\"Password\" submit=\"Log in\"\n                          onSubmit={onSubmit}\n                          serverResponse={serverResponse}/>\n                <RedirectDiv title={'Don\\'t have an account?'} link={'/signup'} desc={'Create'}/>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport {\n    Login,\n};","export const setIsAuthenticated = (status) => ({\n    type: 'SET_IS_AUTHENTICATED',\n    status\n})\n\nexport const fetchUserRequest = () => ({\n        type: 'FETCH_USER_REQUEST'\n    }\n)\n\nexport const fetchUserSuccess = (data) => ({\n        type: 'FETCH_USER_SUCCESS',\n        data\n    }\n)\n\nexport const fetchUserFailure = (errors) => ({\n        type: 'FETCH_USER_FAILURE',\n        errors\n    }\n)\n\n\n","import React from \"react\";\nimport { MuiThemeProvider } from \"@material-ui/core\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\n\nimport {AuthProvider} from './providers/auth/auth.provider'\n\nimport { theme } from \"./themes/theme\";\n\nimport Board from \"./pages/Board\";\nimport {Signup} from \"./pages/Signup\"\nimport {Login} from \"./pages/Login\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <MuiThemeProvider theme={theme}>\n      <AuthProvider>\n          <BrowserRouter>\n              <Route exact path=\"/\" component={Board} />\n              <Route exact path=\"/signup\" component={Signup}/>\n              <Route exact path=\"/login\" component={Login}/>\n          </BrowserRouter>\n      </AuthProvider>\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}